name: CI/CD Pipeline to EKS

on:
  push:
    branches:
      - main  # הפעלת Workflow בעת דחיפה לענף הראשי

env:
  # משתנים בסיסיים
  AWS_REGION: eu-central-1
  AWS_ACCOUNT_ID: 843170960179 
  ECR_REPOSITORY: devops-alon-app 
  EKS_CLUSTER_NAME: devops-alon-eks 
  IMAGE_TAG: ${{ github.sha }} 

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    # הוספת הרשאות ה-Job (פתרון בעיות הרשאה עם PAT)
    permissions:
      id-token: write
      contents: read

    steps:
      - name: 1. Checkout code
        uses: actions/checkout@v4

      - name: 2. Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }} 
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: 3. Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2
        
      # שלב א': בנייה ודחיפה של Docker Image
      - name: 4. Build and push Docker image
        # בניית ה-URL המלא בצורה בטוחה בתוך בלוק run
        env:
          ECR_REGISTRY: ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com
        run: |
          IMAGE_FULL_URL="${ECR_REGISTRY}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}"
          
          echo "Building and pushing image: $IMAGE_FULL_URL"
          docker build -t $IMAGE_FULL_URL .
          docker push $IMAGE_FULL_URL

      # שלב ב': פריסה ל-EKS באמצעות Helm
      - name: 5. Set up Kubeconfig (שימוש בכלי CLI במקום Action)
        # פתרון הבעיה: שימוש בפקודת AWS CLI ישירה במקום Action תקוע
        run: |
          aws eks update-kubeconfig --name ${{ env.EKS_CLUSTER_NAME }} --region ${{ env.AWS_REGION }}

      - name: 6. Install dependencies (Helm)
        run: |
          sudo apt-get update
          sudo apt-get install -y helm

      - name: 7. Deploy application with Helm
        # בניית כתובת ה-Registry המלאה לצורך פריסת Helm
        env:
          ECR_REGISTRY: ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com
        run: |
          helm upgrade --install alon-app ./helm \
            --set image.tag=${{ env.IMAGE_TAG }} \
            --set image.repository=${ECR_REGISTRY}/${{ env.ECR_REPOSITORY }}
