name: CI/CD Pipeline to EKS

on:
  push:
    branches:
      - main  # ה-Workflow ירוץ בדחיפה לענף הראשי

env:
  AWS_REGION: eu-central-1
  ECR_REGISTRY: 843170960179.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com
  ECR_REPOSITORY: devops-alon-app # שם ה-ECR שלך
  EKS_CLUSTER_NAME: devops-alon-eks # שם ה-EKS Cluster שלך
  IMAGE_TAG: ${{ github.sha }} # שימוש ב-commit SHA כתגית ייחודית

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          # משתמש ב-Secrets שהגדרת הרגע ב-GitHub
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }} 
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # שלב א': בנייה ודחיפה של Docker Image
      - name: Build and push Docker image
        id: build-image
        env:
          IMAGE_FULL_URL: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
        run: |
          docker build -t $IMAGE_FULL_URL .
          docker push $IMAGE_FULL_URL

      # שלב ב': פריסה ל-EKS באמצעות Helm
      - name: Set up EKS context
        uses: aws-actions/eks-set-context@v2
        with:
          cluster-name: ${{ env.EKS_CLUSTER_NAME }} 
          aws-region: ${{ env.AWS_REGION }}

      - name: Install dependencies (Helm)
        run: |
          # התקנת Helm על השרת של GitHub Actions
          sudo apt-get update
          sudo apt-get install -y helm

      - name: Deploy application with Helm
        run: |
          # הרצת Helm install/upgrade עם ה-tag וה-repository החדשים
          helm upgrade --install alon-app ./helm \
            --set image.tag=${{ env.IMAGE_TAG }} \
            --set image.repository=${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}
